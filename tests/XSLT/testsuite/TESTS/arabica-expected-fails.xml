<test-suite>
  <test-case id="attribvaltemplate_attribvaltemplate08" skip="yes" reason="HTML output"/>
  <test-case id="axes_axes59" compiles="no" reason="Needs xsl:number"/>
  <test-case id="axes_axes113" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="boolean_boolean08" compiles="no" reason="Needs lang function"/>
  <test-case id="conflictres_conflictres24" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="copy_copy16" compiles="no" reason="Needs id"/>
  <test-case id="copy_copy19" skip="yes" reason="External entity.  ISO-8859-1 output."/>
  <test-case id="copy_copy20" skip="yes" reason="External entity."/>
  <test-case id="copy_copy21" skip="yes" reason="External entity in source."/>
  <test-case id="copy_copy22" skip="yes" reason="External entity in source.  ISO-8859-1 output."/>
  <test-case id="copy_copy38" skip="yes" reason="HTML output"/>
  <test-case id="expression_expression01" compiles="no" reason="Needs lang function"/>
  <test-case id="expression_expression02" compiles="no" reason="Needs unparsed-entity-uri"/>
  <test-case id="expression_expression03" compiles="no" reason="Needs lang function"/>
  <test-case id="expression_expression04" compiles="no" reason="Needs lang function"/>
  <test-case id="expression_expression05" compiles="no" reason="Needs lang function "/>
  <test-case id="expression_expression06" compiles="no" reason="Needs lang function"/>
  <test-case id="extend_extend01" compiles="no" reason="Needs fallback, extension elements"/>
  <test-case id="extend_extend02" compiles="no" reason="Needs fallback, extension elements"/>
  <test-case id="extend_extend04" compiles="no" reason="Needs fallback, extension elements"/>
  <test-case id="impincl_impincl09" compiles="no" reasons="Needs attribute sets"/>
  <test-case id="lre_lre10" compiles="no" reason="Haven't implemented extension-element-prefixes"/>
  <test-case id="lre_lre12" compiles="no" reason="Failing to compile is actually legitimate here.  Saxon and MSXML agree, Xalan chooses to continue."/>
  <test-case id="lre_lre13" compare="text" reason="Text out"/>
  <test-case id="lre_lre20" compiles="no" reason="Haven't implemented extension-element-prefixes"/>
  <test-case id="match_match01" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="match_match11" compiles="no" reason="haven't implemented id function"/>
  <test-case id="mdocs_mdocs02" runs="no" reason="haven't implemented node-set arg version of document()"/>
  <test-case id="mdocs_mdocs03" runs="no" reason="haven't implemented two arg version of document()"/>
  <test-case id="mdocs_mdocs04" runs="no" reason="haven't implemented node-set arg version of document()"/>
  <test-case id="mdocs_mdocs05" runs="no" reason="haven't implemented node-set arg version of document()"/>
  <test-case id="mdocs_mdocs06" runs="no" reason="haven't implemented node-set arg version of document()"/>
  <test-case id="mdocs_mdocs07" runs="no" reason="haven't implemented node-set arg version of document()"/>
  <test-case id="mdocs_mdocs08" runs="no" reason="haven't implemented node-set arg version of document()"/>
  <test-case id="mdocs_mdocs15" runs="no" reason="haven't implemented two arg version of document()"/>
  <test-case id="mdocs_mdocs18" runs="no" reason="haven't implemented node-set arg version of document()"/>
  <test-case id="message_message01" compare="text"/>
  <test-case id="message_message14" compiles="no" reason="Needs xsl:number"/>
  <test-case id="message_message15" compiles="no" reason="Needs xsl:fallback"/>
  <test-case id="namedtemplate_namedtemplate12" compiles="no" reason="Needs xsl:number"/>
  <test-case id="namespace_namespace40" compiles="no" reason="Mangle, like everything other than Xalan, fails when creating an element with an undeclared namespace prefix"/>
  <test-case id="namespace_namespace60" compiles="no" reason="Mangle, like everything other than Xalan, fails when creating an element with an undeclared namespace prefix.  Duplicates namespace_namespace40"/>
  <test-case id="namespace_namespace73" compiles="no" reason="Mangle, like everything other than Xalan, fails when creating an element with an undeclared namespace prefix"/>
  <test-case id="namespace_namespace79" compiles="no" reason="Mangle, like everything other than Xalan, fails when creating an element with an undeclared namespace prefix"/>  
  <test-case id="output_output01" skip="yes" reason="HTML output"/>
  <test-case id="output_output02" skip="yes" reason="HTML output"/>
  <test-case id="output_output03" skip="yes" reason="HTML output"/>
  <test-case id="output_output04" skip="yes" reason="HTML output"/>
  <test-case id="output_output05" skip="yes" reason="HTML output"/>
  <test-case id="output_output06" skip="yes" reason="HTML output"/>
  <test-case id="output_output08" skip="yes" reason="HTML output"/>
  <test-case id="output_output09" skip="yes" reason="HTML output"/>
  <test-case id="output_output10" skip="yes" reason="HTML output"/>
  <test-case id="output_output13" compare="text" reason="Checking DTD in output"/>
  <test-case id="output_output15" compare="text" reason="Checking DTD in output"/>
  <test-case id="output_output16" skip="yes" reason="HTML output"/>
  <test-case id="output_output17" skip="yes" reason="HTML output"/>
  <test-case id="output_output18" skip="yes" reason="HTML output"/>
  <test-case id="output_output20" skip="yes" reason="SHIFT_JIS encoding"/>
  <test-case id="output_output21" skip="yes" reason="BIG5 encoding"/>
  <test-case id="output_output22" skip="yes" reason="EBCDIC_CP_IT encoding"/>
  <test-case id="output_output23" skip="yes" reason="ISO-2022-JP encoding"/>
  <test-case id="output_output25" compare="text" reason="Text output"/>
  <test-case id="output_output26" skip="yes" reason="ISO-8859-1 encoding"/>
  <test-case id="output_output28" skip="yes" reason="US ASCII encoding"/>
  <test-case id="output_output32" skip="yes" reason="HTML output"/>
  <test-case id="output_output33" skip="yes" reason="HTML output"/>
  <test-case id="output_output34" skip="yes" reason="HTML output"/>
  <test-case id="output_output35" skip="yes" reason="HTML output"/>
  <test-case id="output_output36" skip="yes" reason="HTML output"/>
  <test-case id="output_output37" skip="yes" reason="HTML output"/>
  <test-case id="output_output38" skip="yes" reason="HTML output"/>
  <test-case id="output_output39" skip="yes" reason="HTML output"/>
  <test-case id="output_output40" skip="yes" reason="HTML output"/>
  <test-case id="output_output47" skip="yes" reason="HTML output"/>
  <test-case id="output_output48" skip="yes" reason="HTML output"/>
  <test-case id="output_output49" skip="yes" reason="HTML output"/>
  <test-case id="output_output50" skip="yes" reason="HTML output"/>
  <test-case id="output_output52" skip="yes" reason="HTML output"/>
  <test-case id="output_output58" compare="text" reason="Output has no root element"/>
  <test-case id="output_output59" skip="yes" reason="HTML output"/>
  <test-case id="output_output60" skip="yes" reason="HTML output"/>
  <test-case id="output_output61" compare="text" reason="Output is not well formed"/>
  <test-case id="output_output62" skip="yes" reason="HTML output"/>
  <test-case id="output_output63" skip="yes" reason="HTML output"/>
  <test-case id="output_output64" compare="text" reason="Checking DTD in output"/>
  <test-case id="output_output65" compare="text" reason="Checking DTD in output"/>
  <test-case id="output_output70" skip="yes" reason="HTML output"/>
  <test-case id="output_output73" skip="yes" reason="HTML output"/>
  <test-case id="output_output74" skip="yes" reason="HTML output"/>
  <test-case id="output_output75" compare="text" reason="Output is not well formed"/>
  <test-case id="output_output76" compare="text" reason="Text output"/>
  <test-case id="output_output80" skip="yes" reason="Segfaults at the moment.  Encoding problem, I think"/>
  <test-case id="output_output82" compare="text" reason="Checking DTD in output"/>
  <test-case id="output_output86" skip="yes" reason="ISO-8859-1 Encoding"/>
  <test-case id="output_output109" compare="text" reason="Text output"/>
  <test-case id="output_output110" compare="text" reason="Text output"/>
  <test-case id="output_output111" compare="text" reason="Text output"/>
  <test-case id="output_output112" compare="text" reason="Text output"/>
  <test-case id="output_output113" compare="text" reason="Text output"/>
  <test-case id="position_position70" compiles="no" reason="Needs xsl:strip-space" />
  <test-case id="processorinfo_processorinfo03" skip="yes" reason="Expects Xalan URI in result"/>
  <test-case id="reluri_reluri09" runs="no"/>
  <test-case id="reluri_reluri10" runs="no"/>
  <test-case id="reluri_reluri10" runs="no"/>
  <test-case id="reluri_reluri11" runs="no"/>
  <test-case id="select_select07" compare="text" reason="Text output"/>
  <test-case id="select_select74" skip="yes" reason="HTML output"/>
  <test-case id="sort_sort08" skip="yes" reason="Test case is bad.  Xalan sorts % ahead of space.  Others, including comment in test data, disagree."/>
  <test-case id="sort_sort22" compare="text" reason="Text output"/>
  <test-case id="sort_sort23" compare="text" reason="Text output"/>
  <test-case id="sort_sort24" compare="text" reason="Text output"/>
  <test-case id="sort_sort25" compare="text" reason="Text output"/>
  <test-case id="sort_sort27" skip="yes" reason="Test case is bad.  Xalan regards leading whitespace as insignificant.  Everyone else disagrees."/>
  <test-case id="sort_sort30" compare="text" reason="Text output"/>
  <test-case id="sort_sort31" compare="text" reason="Text output"/>
  <test-case id="sort_sort35" compare="text" reason="Text output"/>
  <test-case id="sort_sort37" compare="text" reason="Text output"/>
  <test-case id="string_string13" compiles="no" reason="Needs format-number"/>
  <test-case id="string_string106" compiles="no" reason="Needs format-number"/>
  <test-case id="string_string108" compiles="no" reason="Needs format-number"/>
  <test-case id="string_string109" compiles="no" reason="Needs format-number"/>
  <test-case id="string_string110" compiles="no" reason="Needs format-number"/>
  <test-case id="string_string124" compiles="no" reason="Needs strip-space"/>
  <test-case id="string_string129" compiles="no" reason="Needs strip-space"/>
  <test-case id="string_string130" compiles="no" reason="Needs strip-space"/>
  <test-case id="variable_variable20" runs="no" reason="Possible spec ambiguity.  Mangle agrees with Saxon and MSXML.  Xalan disagrees"/>	
  <test-case id="variable_variable56" runs="no" reason="Possible spec ambiguity.  Mangle agrees with Saxon and MSXML.  Xalan disagrees"/>
  <test-case id="ver_ver01" compiles="no" reason="Forward compatibility"/>
  <test-case id="ver_ver05" compiles="no" reason="Forward compatibility"/>
  <test-case id="ver_ver06" compiles="no" reason="Forward compatibility"/>
  <test-case id="ver_ver07" compiles="no" reason="Forward compatibility"/>
  <test-case id="whitespace_whitespace01" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="whitespace_whitespace02" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="whitespace_whitespace03" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="whitespace_whitespace04" compiles="no" reason="Needs xsl:strip-space and xsl:preserve-space"/>
  <test-case id="whitespace_whitespace05" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="whitespace_whitespace06" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="whitespace_whitespace07" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="whitespace_whitespace12" compiles="no" reason="Needs xsl:strip-space"/>
  <test-case id="whitespace_whitespace22" compiles="no" reason="Needs xsl:strip-space and xsl:preserve-space"/>
  <test-case id="whitespace_whitespace35" compiles="no" reason="Needs xsl:strip-space"/>

  <test-case id="AVTs__77531" compare="fragment" reason="XML Fragment output"/>
  <test-case id="AVTs__77558" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="AVTs__77564" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="AVTs__77570" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="AVTs__77574" skip="yes" reason="Depends on the how you encode the entities.  I suspect the sample output isn't actually one of the correct permutation."/>
  <test-case id="AVTs__77575" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="AVTs__77576" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="AVTs__77577" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="AVTs__77579" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="AVTs__77580" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="AVTs__77582" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="AVTs__77591" skip="yes" reason="Depends on the how you encode the entities.  I suspect the sample output isn't actually one of the correct permutation."/>
  <test-case id="AVTs__77599" compare="fragment" reason="XML Fragment output"/>  
  <test-case id="Attributes__78366" compiles="no" reason="Error case: empty namespace"/>
  <test-case id="Attributes__78372" skip="yes" reason="Expected output includes newlines and tabs, but inconsistently escaped.  Mangle escapes them all, as do Saxon, .NET, and Xalan (although Xalan uses decimal rather than hex numerical entities)."/>
  <test-case id="Attributes__78374" skip="yes" reason="Error is recoverable.  Mangle, Saxon, Xalan all run.  MSXML and .NET do not."/>
  <test-case id="Attributes__81430" compare="fragment" reason="XML Fragment output"/>
  <test-case id="Attributes__81431" compare="fragment" reason="XML Fragment output"/>
  <test-case id="Attributes__81482" compare="text"/>
  <test-case id="Attributes__81483" compare="text"/>
  <test-case id="Attributes__81484" compare="text"/>
  <test-case id="Attributes__81485" compare="fragment"/>
  <test-case id="Attributes__81486" compare="fragment"/>
  <test-case id="Attributes__81487" compare="fragment"/>
  <test-case id="Attributes__81489" compare="text"/>
  <test-case id="Attributes__81491" compare="text"/>
  <test-case id="Attributes__81492" compare="text"/>
  <test-case id="Attributes__81493" compare="text"/>
  <test-case id="Attributes__81494" compare="text"/>
  <test-case id="Attributes__81495" compare="text"/>
  <test-case id="Attributes__81496" compare="fragment"/>
  <test-case id="Attributes__81497" compare="fragment"/>
  <test-case id="Attributes__81499" compare="fragment"/>
  <test-case id="Attributes__81544" compare="fragment"/>
  <test-case id="Attributes__81545" compare="text"/>
  <test-case id="Attributes__81546" compare="text"/>
  <test-case id="Attributes__81547" compare="text"/>
  <test-case id="Attributes__81548" compare="fragment"/>
  <test-case id="Attributes__81550" compare="fragment"/>
  <test-case id="Attributes__81551" compare="fragment"/>
  <test-case id="Attributes__83030" compare="fragment"/>
  <test-case id="Attributes__83822" compare="text"/>
  <test-case id="Attributes__84169" compare="text"/>
  <test-case id="Attributes__89433" compare="text"/>
  <test-case id="Attributes__89434" compare="text"/>
  <test-case id="Attributes__89435" compare="text"/>
  <test-case id="Attributes__89436" compare="text"/>
  <test-case id="Attributes__89437" compare="text"/>
  <test-case id="Attributes__89438" compare="text"/>
  <test-case id="Attributes__89439" compare="fragment"/>
  <test-case id="Attributes__89440" compare="fragment"/>
  <test-case id="Attributes__89441" compare="fragment"/>
  <test-case id="Attributes__89442" compare="fragment"/>
  <test-case id="Attributes__89459" compare="fragment"/>
  <test-case id="Attributes__89466" compare="fragment"/>
  <test-case id="Attributes_Attribute_UseXmlnsAsNamespaceForAttributeImplicitly" skip="yes" reason="Marked as execution error, but error is recovered at runtime.  Mangle issues a diagnostic - other processors agree."/>
  <test-case id="Attributes_Attribute_UseXmlnsNsAsNamespaceForAttribute" skip="yes" reason="Marked as execution error, but I believe this to be wrong.  The .NET XSLT processor refuses, but everything else processes it without issue."/>
  <test-case id="Attributes_Attribute_WhitespaceInUseAttributeSets" compiles="no" reason="Haven't implemented attribute-sets"/>
  <test-case id="Attributes_EmptyStringInUseAttribSets" compiles="no" reason="Haven't implemented attribute-sets"/>
  <test-case id="BVTs_bvt001" compare="fragment"/>
  <test-case id="BVTs_bvt003" compiles="no" reason="Needs attribute sets"/>
  <test-case id="BVTs_bvt005" compiles="no" reason="Doesn't understand xml:space properly"/>
  <test-case id="BVTs_bvt007" compare="text"/>
  <test-case id="BVTs_bvt008" compare="fragment"/>
  <test-case id="BVTs_bvt013" compare="fragment"/>
  <test-case id="BVTs_bvt014" compare="text"/>
  <test-case id="BVTs_bvt017" skip="yes" reason="Needs funky output encoding"/>
  <test-case id="BVTs_bvt018" skip="yes" reason="Needs funky output encoding"/>
  <test-case id="BVTs_bvt019" skip="yes" reason="Needs funky output encoding"/>
  <test-case id="BVTs_bvt020" compiles="no" reason="Needs xsl:fall-back"/>
  <test-case id="BVTs_bvt021" compare="fragment"/>
  <test-case id="BVTs_bvt022" compiles="no" reason="Needs xsl:fall-back"/>
  <test-case id="BVTs_bvt023" compiles="no" reason="Needs xsl:fall-back"/>
  <test-case id="BVTs_bvt024" compiles="no" reason="Needs format-number"/>
  <test-case id="BVTs_bvt027" compare="fragment"/>
  <test-case id="BVTs_bvt033" compiles="no"/>
  <test-case id="BVTs_bvt034" compiles="no"/>
  <test-case id="BVTs_bvt035" compare="text"/>
  <test-case id="BVTs_bvt036" compare="text"/>
  <test-case id="BVTs_bvt037" compare="fragment"/>
  <test-case id="BVTs_bvt038" compare="fragment"/>
  <test-case id="BVTs_bvt040" compiles="no" reason="Haven't implemented xsl:attribute-set"/>
  <test-case id="BVTs_bvt042" compare="fragment"/>
  <test-case id="BVTs_bvt043" compare="fragment"/>
  <test-case id="BVTs_bvt044" skip="yes" reason="Segfault!"/>
  <test-case id="BVTs_bvt045" skip="yes" reason="Bad result data"/>
  <test-case id="BVTs_bvt047" skip="yes" reason="HTML"/>
  <test-case id="BVTs_bvt052" skip="yes" reason="Uses MSXML specific extension function"/>
  <test-case id="BVTs_bvt053" compare="text"/>
  <test-case id="BVTs_bvt056" compare="text"/>
  <test-case id="BVTs_bvt060" compiles="no" reason="Needs xsl:number"/>
  <test-case id="BVTs_bvt061" compiles="no" reason="Needs xsl:number"/>
  <test-case id="BVTs_bvt062" compare="fragment"/>
	<test-case id="BVTs_bvt064" skip="yes" reason="HTML output"/>
  <test-case id="BVTs_bvt065" compare="fragment"/>
  <test-case id="BVTs_bvt069" compare="text"/>	
  <test-case id="BVTs_bvt070" compare="text"/>
  <test-case id="BVTs_bvt072" compare="fragment"/>
  <test-case id="BVTs_bvt073" compare="fragment"/>
  <test-case id="BVTs_bvt075" compare="text"/>
  <test-case id="BVTs_bvt076" compare="text"/>
  <test-case id="BVTs_bvt078" compare="text"/>
  <test-case id="BVTs_bvt079" compare="text"/>
  <test-case id="BVTs_bvt080" compare="fragment"/>
  <test-case id="BVTs_bvt083" compare="fragment"/>
  <test-case id="BVTs_bvt085" skip="yes" reason="Bad result data"/>
  <test-case id="BVTs_bvt086" compare="text"/>
  <test-case id="BVTs_bvt089" compare="fragment"/>
  <test-case id="BVTs_bvt090" compare="text"/>
  <test-case id="BVTs_bvt092" compare="fragment"/>
  <test-case id="BVTs_bvt094" compare="text"/>
  <test-case id="BVTs_bvt095" compare="fragment"/>
  <test-case id="BVTs_bvt096" compare="text"/>
  <test-case id="BVTs_bvt098" skip="yes" reason="Bad result data.  There's no way this test can pass as written."/>
  <test-case id="BVTs_bvt099" compare="fragment"/>
  <test-case id="BVTs_bvt100" compare="fragment"/>
  <test-case id="Comment_Comment_CDATAWithDoubleHyphen" compare="fragment"/>
  <test-case id="Comment_Comment_CDATAWithDoubleHyphenEntities" compare="fragment"/>
  <test-case id="Comment_Comment_CDATAWithSingleHyphen" compare="fragment"/>
  <test-case id="Comment_Comment_CommentWithCDATAValidText" compare="fragment"/>
  <test-case id="Comment_Comment_CommentWithForeignCharacters" skip="yes" reason="Only support UTF-8 at the moment"/>
  <test-case id="Comment_Comment_CommentWithOnlyValidText" compare="fragment"/>
  <test-case id="Comment_Comment_DoubleHypenEntitywithDelCharacter" skip="yes" reason="Only support UTF-8 at the moment"/>
  <test-case id="Comment_Comment_DoubleHypenInText" skip="yes" reason="Only support UTF-8 at the moment"/>
  <test-case id="Comment_Comment_DoubleHyphenONLY" compare="fragment"/>
  <test-case id="Comment_Comment_EmptyComment" compare="fragment"/>
  <test-case id="Comment_Comment_HyphenEntityAndHyphen" compare="fragment"/>
  <test-case id="Comment_Comment_LineOfAllHyphens" compare="fragment"/>
  <test-case id="Comment_Comment_SingleHyphenOnly" compare="fragment"/>
  <test-case id="Comment_Comment_Test1" compare="fragment"/>
  <test-case id="Comment_Comment_Test2" compare="fragment"/>
  <test-case id="Comment_Comment_Test3" compiles="no" reason="Haven't implemented attribute-sets"/>
  <test-case id="Completeness__84351" compare="text"/>
  <test-case id="Completeness__84354" compare="fragment"/>
  <test-case id="Completeness__84359" compare="text"/>
  <test-case id="Completeness__84361" compare="fragment"/>
  <test-case id="ConflictResolution__77619" compare="fragment"/>
  <test-case id="ConflictResolution__77621" compare="fragment"/>
  <test-case id="ConflictResolution__77622" compare="fragment"/>
  <test-case id="ConflictResolution__77746" compare="fragment"/>
  <test-case id="ConflictResolution__77781" compare="fragment"/>
  <test-case id="ConflictResolution__77782" compare="fragment"/>
  <test-case id="ConflictResolution__77783" compare="fragment"/>
  <test-case id="ConflictResolution__77784" compare="fragment"/>
  <test-case id="ConflictResolution__77802" compare="fragment"/>
  <test-case id="ConflictResolution__77833" compare="fragment"/>
  <test-case id="ConflictResolution__77847" compare="fragment"/>
  <test-case id="ConflictResolution__77870" compare="fragment"/>
  <test-case id="ConflictResolution__77871" compare="fragment"/>
  <test-case id="ConflictResolution__77872" compare="fragment"/>
  <test-case id="ConflictResolution__77875" compare="fragment"/>
  <test-case id="ConflictResolution__77876" compare="fragment"/>
  <test-case id="ConflictResolution__77877" compare="fragment"/>
  <test-case id="ConflictResolution__77878" compare="fragment"/>
  <test-case id="ConflictResolution__77879" compare="fragment"/>
  <test-case id="ConflictResolution__77881" compare="fragment"/>
  <test-case id="ConflictResolution__77882" compare="fragment"/>
  <test-case id="ConflictResolution__77885" compare="fragment"/>
  <test-case id="ConflictResolution__77886" compare="fragment"/>
  <test-case id="ConflictResolution__77889" compare="fragment"/>
  <test-case id="ConflictResolution__77891" compare="fragment"/>
  <test-case id="ConflictResolution__77893" compare="fragment"/>
  <test-case id="ConflictResolution__77902" compare="fragment"/>
  <test-case id="ConflictResolution__77904" compare="fragment"/>
  <test-case id="ConflictResolution__84476" compare="fragment"/>
  <test-case id="ConflictResolution__84477" compare="fragment"/>
  <test-case id="ConflictResolution_ConflictResBetweenStripSpaceAndPreserveSpace" compiles="no"/>
  <test-case id="Copying__84388" compare="fragment"/>
  <test-case id="Copying__84389" compare="fragment"/>
  <test-case id="Copying_UseXmlnsWithEmptyStringAsDefaultNs" skip="yes" reason="Stylesheet encoding in Windows-1251"/>
  <test-case id="Elements__78347" runs="no" reason="Needs more sophisticated encoding handling than we have"/>
  <test-case id="Elements__89062" compare="text"/>
  <test-case id="Elements__89063" compare="text"/>
  <test-case id="Elements__89065" compare="text"/>
  <test-case id="Elements__89066" compare="text"/>
  <test-case id="Elements__89071" compare="fragment"/>
  <test-case id="Elements__89072" compare="fragment"/>
  <test-case id="Elements__89104" compare="text"/>
  <test-case id="Elements__89107" compare="text"/>
  <test-case id="Elements__89108" compare="text"/>
  <test-case id="Elements__89112" compare="fragment"/>
  <test-case id="Elements__89113" compare="fragment"/>
  <test-case id="Elements__89207" compare="fragment"/>
  <test-case id="Elements__89278" compare="text"/>
  <test-case id="Elements__89279" compare="text"/>
  <test-case id="Elements__89280" compare="text"/>
  <test-case id="Elements__89281" compare="text"/>
  <test-case id="Elements__89286" compare="fragment"/>
  <test-case id="Elements__89287" compare="fragment"/>
  <test-case id="Elements__89705" compare="fragment"/>
  <test-case id="Elements__89709" compare="fragment"/>
  <test-case id="Elements__89710" compare="fragment"/>
  <test-case id="Elements__89711" compare="fragment"/>
  <test-case id="Elements__89712" compare="fragment"/>
  <test-case id="Elements__89713" compare="text"/>
  <test-case id="Elements__89717" compare="fragment"/>
  <test-case id="Elements__89718" compare="fragment"/>
  <test-case id="Elements__89723" compare="fragment"/>
  <test-case id="Elements_Element_UseXslElementWithNameSpaceAttrEqualToXmlnsUri" skip="yes" reason="Error is recoverable.  Mangle, Saxon, Saxon8, Xalan all run.  MSXML and .NET do not."/>
  <test-case id="Errors_err093" skip="yes" reason="bad sort/@lang value is recoverable. "/>
  <test-case id="Fallback__91817" compiles="no"/>
  <test-case id="Fallback__91818" compiles="no"/>
  <test-case id="Fallback__91819" compiles="no"/>
  <test-case id="Fallback__91820" compiles="no"/>
  <test-case id="Fallback__91821" compiles="no"/>
  <test-case id="Fallback__91823" compiles="no"/>
  <test-case id="Fallback__91824" compiles="no"/>
  <test-case id="ForEach_ForEach_ForeachWithXPATHEvaluatesToNull" compare="text"/>
  <test-case id="ForwardComp__91837" compiles="no"/>
  <test-case id="ForwardComp__91838" compiles="no"/>
  <test-case id="ForwardComp__91839" compiles="no"/>
  <test-case id="ForwardComp__91840" compiles="no"/>
  <test-case id="ForwardComp__91842" compiles="no"/>
  <test-case id="ForwardComp__91843" compiles="no"/>
  <test-case id="ForwardComp__91845" compiles="no"/>
  <test-case id="ForwardComp__91846" compiles="no"/>
  <test-case id="ForwardComp__91847" compiles="no"/>
  <test-case id="ForwardComp__91848" compiles="no"/>
  <test-case id="ForwardComp__91849" compiles="no"/>
  <test-case id="ForwardComp__91853" compiles="no"/>
  <test-case id="ForwardComp__91855" compiles="no"/>
	<test-case id="Import__10000" compare="text"/>
	<test-case id="Import__10001" compare="text"/>
	<test-case id="Import__84611" compare="text"/>
	<test-case id="Import__84612" compare="text"/>
	<test-case id="Import__84613" compare="text"/>
	<test-case id="Import__84614" compare="fragment"/>
	<test-case id="Import__84615" compare="fragment"/>
	<test-case id="Import__91032" compare="fragment"/>
	<test-case id="Import__91033" compare="text"/>
	<test-case id="Import__91048" compare="fragment"/>
	<test-case id="Import__91116" compare="fragment"/>
	<test-case id="Import__91117" compare="fragment"/>
	<test-case id="Import__91118" compare="fragment"/>
	<test-case id="Import__91134" compare="fragment"/>
	<test-case id="Import__91136" compare="fragment"/>
	<test-case id="Import__91148" compare="fragment"/>
	<test-case id="Import__91150" compiles="no" reason="references internal MS web server"/>
	<test-case id="Import__91151" compare="fragment"/>
	<test-case id="Import__91156" compiles="no" reason="references internal MS file server"/>
	<test-case id="Import__91157" compiles="no" reason="references internal MS file server"/>
	<test-case id="Import__91158" compiles="no" reason="references internal MS web server"/>
	<test-case id="Import__91164" compare="fragment"/>
	<test-case id="Import__91165" compiles="no" reason="references internal MS web server"/>
	<test-case id="Import__91173" compare="fragment"/>
  <test-case id="Keys__10050" compare="text"/>
  <test-case id="Keys__10051" compare="text"/>
  <test-case id="Keys__91727" compare="fragment"/>
  <test-case id="Keys__91730" compare="fragment"/>
  <test-case id="Keys__91832" skip="yes" reason="uses generate-id() in output"/>
  <test-case id="Keys__91833" skip="yes" reason="uses generate-id() in output"/>
  <test-case id="Keys__91834" compare="text"/>
  <test-case id="Keys__91835" compare="text"/>
  <test-case id="Keys__91836" skip="yes" reason="uses entities"/>
  <test-case id="Keys__91858" compare="text"/>
  <test-case id="Keys__91859" skip="yes" reason="uses entities"/>
  <test-case id="Keys__91860" compare="text"/>
  <test-case id="Keys_Bug76935" compare="fragment"/>
  <test-case id="Keys_PerfRepro2" compiles="no" reason="needs xsl:attribute-set"/>
  <test-case id="Keys_PerfRepro3" skip="yes" reason="Runs really slowly.  Come back to this later"/>
  <test-case id="Messages__91765_1" compare="fragment"/>
  <test-case id="Miscellaneous__83996" compare="text"/>
  <test-case id="Miscellaneous__84002" compare="fragment"/>
  <test-case id="Miscellaneous__84111" compare="text"/>
  <test-case id="Miscellaneous__84039" compare="fragment"/>
  <test-case id="Miscellaneous__84362" compare="fragment"/>
  <test-case id="Miscellaneous__84406" compare="fragment"/>
  <test-case id="Miscellaneous__84407" compare="fragment"/>
  <test-case id="Miscellaneous__84408" compare="fragment"/>
  <test-case id="Miscellaneous__84409" compare="fragment"/>
  <test-case id="Miscellaneous__84410" compare="fragment"/>
  <test-case id="Miscellaneous__84411" compare="fragment"/>
  <test-case id="Miscellaneous__84412" compare="fragment"/>
  <test-case id="Miscellaneous__84420" compare="fragment"/>
  <test-case id="Miscellaneous__84425" compare="fragment"/>
  <test-case id="Miscellaneous__84427" skip="yes" reason="HTML output"/>
  <test-case id="Miscellaneous__84430" compare="fragment"/>
  <test-case id="Miscellaneous__84435" compiles="no"/>
  <test-case id="Miscellaneous__84475" compare="fragment"/>
  <test-case id="Miscellaneous__84610" compare="text"/>
  <test-case id="Modes__78323" compare="fragment"/>
  <test-case id="Modes__78325" compare="text"/>
  <test-case id="Modes__78327" compare="fragment"/>
  <test-case id="Modes__78328" compare="text"/>
  <test-case id="Modes__78333" compare="fragment"/>
  <test-case id="Modes__78334" compare="fragment"/>
  <test-case id="Modes__78341" compare="fragment"/>
  <test-case id="Modes__78342" compare="fragment"/>
  <test-case id="Modes__78343" compare="fragment"/>
  <test-case id="Modes__84413" compare="fragment"/>
  <test-case id="Modes__84414" compare="fragment"/>
  <test-case id="NamedTemplates__84029" compare="text"/>
  <test-case id="NamedTemplates__84037" compare="fragment"/>
  <test-case id="NamedTemplates__84038" compare="fragment"/>
  <test-case id="NamedTemplates__84043" compare="fragment"/>
  <test-case id="NamedTemplates__84044" compare="text"/>
  <test-case id="NamedTemplates__84047" compare="text"/>
  <test-case id="NamedTemplates__84416" compare="fragment"/>
  <test-case id="NamedTemplates__84417" compare="fragment"/>
  <test-case id="NamedTemplates__84418" compare="fragment"/>
  <test-case id="NamedTemplates__84419" compare="fragment"/>
  <test-case id="NamedTemplates__84436" compare="fragment"/>
  <test-case id="NamedTemplates__84437" compare="fragment"/>
  <test-case id="NamedTemplates_NamedTemplate_ImportTemplateThatCallsParentStylesheetNT" compare="fragment"/>
  <test-case id="NamedTemplates_NamedTemplate_ImportTemplateWithSameName" compare="fragment"/>
  <test-case id="NamedTemplates_NamedTemplate_NameTemplateWithEscapeCharacterInName" compare="text"/>
  <test-case id="Namespace__77655" compare="fragment"/>
  <test-case id="Namespace__77665" skip="yes" reason="bad test case - it runs identically on everything"/>
  <test-case id="Namespace__77675" skip="yes" reason="duplicate of Namespace__77655.  Even second time around it's a bad test case."/>
  <test-case id="Namespace__77669" compare="fragment"/>
  <test-case id="Namespace__77700" compare="fragment"/>
  <test-case id="Namespace__77701" compare="fragment"/>
  <test-case id="Namespace__77702" compare="text"/>
  <test-case id="Namespace__77703" compare="fragment"/>
  <test-case id="Namespace__77983" compare="fragment"/>
  <test-case id="Namespace__78214" compiles="no" reason="haven't implemented forward compatibility"/>
  <test-case id="Namespace__84473" compare="fragment"/>
  <test-case id="Namespace__84474" compare="fragment"/>
  <test-case id="Namespace_CheckXmlnsResetOnResultTree" skip="yes" reason="windows-1251 encoding"/>
  <test-case id="Namespace-alias__91768" compare="text"/>
  <test-case id="Namespace-alias__91788" compare="fragment"/>
  <test-case id="Namespace-alias__91789" compare="fragment"/>
  <test-case id="Namespace-alias__91792" compare="fragment"/>
  <test-case id="Namespace-alias__91793" compare="fragment"/>
  <test-case id="Namespace-alias__91794" compare="fragment"/>
  <test-case id="Namespace-alias__91795" compare="fragment"/>
  <test-case id="Namespace-alias__91796" compare="fragment"/>
  <test-case id="Namespace-alias__91797" compare="fragment"/>
  <test-case id="Namespace-alias__91798" compare="fragment"/>
  <test-case id="Namespace-alias__91799" compare="fragment"/>
  <test-case id="Namespace-alias__91800" compare="fragment"/>
  <test-case id="Namespace-alias__91801" compare="fragment"/>
  <test-case id="Namespace-alias_NSAlias_In_Import" compare="fragment"/>
  <test-case id="Namespace-alias_NSAlias_Inside_CallTemplate" compare="fragment"/>
  <test-case id="Namespace_XPath_CopyNamespaceNodeToOutput" skip="yes" reason="Bad test result.  Also a slightly non-sensicle test in the first place, as you can't force them to appear in the output."/>
  <test-case id="Namespace_XPath_PredefinedPrefix_XMLNS" compiles="no" reason="Bad test case.  xmlns is unbound - Xalan, Saxon, .Net agree, msxml thinks otherwise."/>
  <test-case id="ProcessingInstruction__78188" compare="fragment"/>
  <test-case id="ProcessingInstruction__78190" compare="fragment"/>
  <test-case id="ProcessingInstruction__78196" compare="fragment"/>
  <test-case id="ProcessingInstruction__78200" compare="fragment"/>
  <test-case id="ProcessingInstruction__78201" compare="fragment"/>
  <test-case id="ProcessingInstruction__78202" compare="fragment"/>
  <test-case id="ProcessingInstruction__78203" compare="fragment"/>
  <test-case id="ProcessingInstruction__78393" compare="fragment"/>
  <test-case id="ProcessingInstruction__78394" compare="fragment"/>
  <test-case id="ProcessingInstruction_InvalidPIName2" runs="no"/>
  <test-case id="RTF_RTF_to_number_in_format_number" compiles="no"/>
  <test-case id="Sorting__77529" compare="text"/>
  <test-case id="Sorting__77530" compiles="no"/>
  <test-case id="Sorting__77539" compare="fragment"/>
  <test-case id="Sorting__77560" compare="text"/>
  <test-case id="Sorting__77561" compare="text"/>
  <test-case id="Sorting__77567" compare="text"/>
  <test-case id="Sorting__77568" compare="text"/>  
  <test-case id="Sorting__77977" skip="yes" reason="I think the result document is bad - compare what Saxon or Xalan produce with MSXML"/>
  <test-case id="Sorting__77979" compare="text"/>
  <test-case id="Sorting__77980" compare="text"/>
  <test-case id="Sorting__77981" compare="text"/>
  <test-case id="Sorting__77982" compiles="no" compare="text"/>
  <test-case id="Sorting__77985" compare="text"/>
  <test-case id="Sorting__78191" compare="fragment"/>
  <test-case id="Sorting__78286" skip="yes" reason="multiple valid results - Mangle agrees with Saxon, producing a different result to MSXML and Xalan"/>
  <test-case id="Sorting__78291" skip="yes" reason="multiple valid results - Mangle agrees with Saxon, producing a different result to MSXML and Xalan" compare="text"/>
  <test-case id="Sorting__81710" compare="fragment"/>
  <test-case id="Sorting__81711" compare="fragment"/>
  <test-case id="Sorting__81712" compare="fragment"/>
  <test-case id="Sorting__81717" compare="fragment"/>
  <test-case id="Sorting__81718" compare="fragment"/>
  <test-case id="Sorting__81719" compare="fragment"/>
  <test-case id="Sorting__84471" compare="text"/>
  <test-case id="Sorting__84472" compare="text"/>
  <test-case id="Sorting__84479" compare="text"/>
  <test-case id="Sorting__89749" compare="text"/>
  <test-case id="Sorting__89751" compare="text"/>
  <test-case id="Sorting__89758" compare="fragment"/>
  <test-case id="Sorting__89760" compare="text"/>
  <test-case id="Sorting__89762" compare="text"/>
  <test-case id="Sorting__89763" compare="text"/>
  <test-case id="Sorting__91689" compare="text"/>
  <test-case id="Sorting__91691" compare="text"/>
  <test-case id="Sorting__91693" compare="text"/>
  <test-case id="Sorting__91694" compare="text"/>
  <test-case id="Sorting__91695" compare="text"/>
  <test-case id="Sorting__91696" compare="text"/>
  <test-case id="Sorting__91697" compare="text"/>
  <test-case id="Sorting__91698" compare="text"/>
  <test-case id="Sorting__91699" compare="text"/>
  <test-case id="Sorting__91700" compare="text"/>
  <test-case id="Sorting__91701" compare="text"/>
  <test-case id="Sorting__91704" compare="text"/>
  <test-case id="Sorting__91705" compare="text"/>
  <test-case id="Sorting__91752" compare="text"/>
  <test-case id="Sorting__91753" compare="fragment"/>
  <test-case id="Sorting_SortExprWithCurrentInsideForEach" compare="fragment"/>
  <test-case id="Sorting_SortExprWithCurrentInsideForEach1" compare="text"/>
  <test-case id="Sorting_SortOnAttributeWithNamespacePrefix" compare="text"/>
  <test-case id="Sorting_SortExprWithCurrentInApplyTemplates" compare="fragment"/>
  <test-case id="Sorting_TurkishISortingTest" compare="fragment"/>
  <test-case id="Stylesheet__91802" compiles="no" reason="Haven't implements extension-element-prefixes yet"/>
  <test-case id="Stylesheet__91803" compiles="no" reason="Haven't implemented xsl:fallback yet"/>
  <test-case id="Stylesheet__91804" compiles="no" reason="Haven't implemented xsl:fallback yet"/>
  <test-case id="Stylesheet__91806" compiles="no" reason="Haven't implements extension-element-prefixes yet"/>
  <test-case id="Stylesheet__91807" compiles="no" reason="Haven't implements extension-element-prefixes yet"/>
  <test-case id="Stylesheet__91808" compiles="no" reason="Haven't implements extension-element-prefixes yet"/>
  <test-case id="Stylesheet__91809" skip="yes" reason="Haven't implemented extension elements yet."/>
  <test-case id="Stylesheet__91810" compiles="no" reason="Haven't implemented element-available yet"/>
  <test-case id="Stylesheet__91811" compiles="no" reason="Haven't implemented xsl:fallback yet"/>
  <test-case id="Stylesheet__91812" skip="yes" reason="Haven't implemented extension elements yet."/>
  <test-case id="Stylesheet__91813" skip="yes" reason="Haven't implemented extension elements yet."/>
  <test-case id="Stylesheet__91814" skip="yes" reason="Haven't implemented extension elements yet."/>
  <test-case id="Stylesheet__91815" skip="yes" reason="Haven't implemented extension elements yet."/>
  <test-case id="Stylesheet__91816" compiles="no" reason="Bad test case.  xsl:extension-element-prefixes is not allowed on xsl:value-of"/>
  <test-case id="Stylesheet_Stylsheet_ExcludeResultPrefixesOnStylesheet" skip="yes" reason="wacky ref_out encoding"/>
  <test-case id="Stylesheet_UseStylesheetWithXmlnsEqualToXmlnsUri" skip="yes" reason="Questionable test case.  MSXML and Saxon both run it ok"/>
  <test-case id="Template__84581" compare="text"/>
  <test-case id="Template_MatchPatternVariation1" compare="fragment"/>
  <test-case id="Template_MatchPatternVariation2" compare="fragment"/>
  <test-case id="Template_MatchPatternVariation3" compare="fragment"/>
  <test-case id="Template_MatchPatternVariation4" compare="fragment"/>
  <test-case id="Template_MatchPatternVariation5" compare="fragment"/>
  <test-case id="Template_MatchPatternVariation6" compare="fragment"/>
  <test-case id="Template_TestParamValueAfterCallTemplate" compare="text"/>
  <test-case id="Template_Bug85313" compare="text"/>
  <test-case id="Template_Bug85313_1" compare="text"/>
  <test-case id="Text__78230" compare="text"/>
  <test-case id="Text__78242" compare="text"/>
  <test-case id="Text__78244" compare="text"/>
  <test-case id="Text__78245" skip="yes" reason="XML namespace bound to wrong prefix"/>
  <test-case id="Text__78246" compare="text"/>
  <test-case id="Text__78247" compare="text"/>
  <test-case id="Text__78249" compare="text"/>
  <test-case id="Text__78272" skip="yes" reason="Test result is bad."/>
  <test-case id="Text__78273" skip="yes" reason="XML namespace bound to wrong prefix"/>
  <test-case id="Text__78274" skip="yes" reason="xsl:preserve-space attribute?  Sorry pal, that's bad XSLT and this is a bad test case"/>
  <test-case id="Text__78275" compare="text"/>
  <test-case id="Text__78276" skip="yes" reason="the xsl:preserve-space attribute again"/>
  <test-case id="Text__78277" compare="text"/>
  <test-case id="Text__78278" compare="text"/>
  <test-case id="Text__78279" compare="text"/>
  <test-case id="Text__78280" compare="text"/>
  <test-case id="Text__78281" skip="yes" reason="XML namespace bound to wrong prefix"/>
  <test-case id="Text__78307" compare="text"/>
  <test-case id="Text__78308" compare="text"/>
  <test-case id="Text__78309" skip="yes" reason="Bad test case.  msxml whitespace handling disagrees with everyone else"/>
  <test-case id="Text__78311" compare="text"/>
  <test-case id="Text__78313" compare="text"/>
  <test-case id="Text__91137" compare="fragment"/>
  <test-case id="Text_DoeWithCdataInText" compare="text"/>
  <test-case id="Text_modified78308" compare="text"/>
  <test-case id="Text_modified78309" compare="text"/>
  <test-case id="Text_Modified78311" compare="text"/>
  <test-case id="Variables__78097" compare="text"/>
  <test-case id="Variables__78098" compare="text"/>
  <test-case id="Variables__78100" compare="text"/>
  <test-case id="Variables__78101" compare="text"/>
  <test-case id="Variables__78110" compare="text"/>
  <test-case id="Variables__78111" compare="text"/>
  <test-case id="Variables__78112" compare="text"/>
  <test-case id="Variables__78115" compare="text"/>
  <test-case id="Variables__78116" compare="text"/>
  <test-case id="Variables__78118" compiles="no" reason="Bad test case.  This test is essentially a duplicate of Variables__78357, which correctly marked as an expected error."/>
  <test-case id="Variables__78132" compare="text"/>
  <test-case id="Variables__78137" compare="text"/>
  <test-case id="Variables__78153" compare="text"/>
  <test-case id="Variables__78160" compare="text"/>
  <test-case id="Variables__78162" compare="text"/>
  <test-case id="Variables__78163" compare="text"/>
  <test-case id="Variables__78164" compare="text"/>
  <test-case id="Variables__78305" compare="text"/>
  <test-case id="Variables__78306" compare="text"/>
  <test-case id="Variables__78316" compare="text"/>
  <test-case id="Variables__78317" compare="text"/>
  <test-case id="Variables__78348" compare="text"/>
  <test-case id="Variables__78350" compare="text"/>
  <test-case id="Variables__78352" compare="text"/>
  <test-case id="Variables__78353" compare="text"/>
  <test-case id="Variables__78354" compare="text"/>
  <test-case id="Variables__78355" compare="text"/>
  <test-case id="Variables__78361" compare="text"/>
  <test-case id="Variables__78400" compare="text"/>
  <test-case id="Variables__78401" compare="text"/>
  <test-case id="Variables__78404" compare="text"/>
  <test-case id="Variables__84026" compare="text"/>
  <test-case id="Variables__84034" compare="text"/>
  <test-case id="Variables__84036" compare="text"/>
  <test-case id="Variables__84438" compare="text"/>
  <test-case id="Variables__84439" compare="text"/>
  <test-case id="Variables__84634" skip="yes" reason="This is a badly written test case.  While a shadowed variable is clearly an error, it's not clear if it's a compile-time or run-time error.  Arabica handles it at runtime, but if the code isn't run, the error isn't found.  This test doesn't actually exercise the code, hence Arabica runs without it without issue.  Xalan and Saxon8 agree.  Arabica's own tests cover this case."/>
  <test-case id="Variables__84635" skip="yes" reason="html"/>
  <test-case id="Variables__84636" skip="yes" reason="html"/>
  <test-case id="Variables__84637" skip="yes" reason="html"/>
  <test-case id="Variables__84709" skip="yes" reason="html"/>
  <test-case id="Variables__84710" skip="yes" reason="Exact duplicate of 84634."/>
  <test-case id="Variables__84712" skip="yes" reason="html"/>
  <test-case id="Variables_GlobalVarHaveLocalVarDefinedWithin" compare="fragment"/>
  <test-case id="Variables_PositionAndLastComparisonShouldBeEqual" compare="text"/>  
  <test-case id="Variables_SelectAttributeAndWhitespaceBetweenElement" compare="fragment"/>
  <test-case id="Variables_UseDocumentFnToReturnRootNode" skip="yes" reason="Test case loads a document sitting on some departmental file share inside Microsoft that probably no longer exists."/>
  <test-case id="Variables_VariableWithinVariable" skip="yes" reason="XML encoding in Windows-1251.  Similar test in arabica tests."/>
  <test-case id="Variables_xslt_variable_qname_test1" compare="fragment"/>
  <test-case id="Variables_xslt_variable_qname_test2" compare="fragment"/>
  <test-case id="Whitespaces__84599" compare="text"/>
  <test-case id="Whitespaces__91221" compare="fragment"/>
  <test-case id="Whitespaces__91222" compare="fragment"/>
  <test-case id="Whitespaces__91223" compare="fragment"/>
  <test-case id="Whitespaces__91224" compare="fragment"/>
  <test-case id="Whitespaces__91225" compare="fragment"/>
  <test-case id="Whitespaces__91226" compare="fragment"/>
  <test-case id="Whitespaces__91227" compare="fragment"/>
  <test-case id="Whitespaces__91228" compare="fragment"/>
  <test-case id="Whitespaces__91421" compiles="no"/>
  <test-case id="Whitespaces__91422" compiles="no"/>
  <test-case id="Whitespaces__91423" compiles="no"/>
  <test-case id="Whitespaces__91424" compiles="no"/>
  <test-case id="Whitespaces__91425" compiles="no"/>
  <test-case id="Whitespaces__91426" compiles="no"/>
  <test-case id="Whitespaces__91427" compiles="no"/>
  <test-case id="Whitespaces__91428" compiles="no"/>
  <test-case id="Whitespaces__91429" compiles="no"/>
  <test-case id="Whitespaces__91430" compiles="no"/>
  <test-case id="Whitespaces__91431" compiles="no"/>
  <test-case id="Whitespaces__91432" compiles="no"/>
  <test-case id="Whitespaces__91433" compiles="no"/>
  <test-case id="Whitespaces__91434" compiles="no"/>
  <test-case id="Whitespaces__91435" compiles="no"/>
  <test-case id="Whitespaces__91436" compiles="no"/>
  <test-case id="Whitespaces__91437" compiles="no"/>
  <test-case id="Whitespaces__91438" compiles="no"/>
  <test-case id="Whitespaces__91439" compiles="no"/>
  <test-case id="Whitespaces__91440" compiles="no"/>
  <test-case id="Whitespaces__91441" compiles="no"/>
  <test-case id="Whitespaces__91442" compiles="no"/>
  <test-case id="Whitespaces__91443" compiles="no"/>
  <test-case id="Whitespaces__91444" compiles="no"/>
  <test-case id="Whitespaces__91445" compiles="no"/>
  <test-case id="Whitespaces__91446" compiles="no"/>
  <test-case id="Whitespaces__91447" compiles="no"/>
  <test-case id="Whitespaces__91448" compiles="no"/>
  <test-case id="Whitespaces__91449" compiles="no"/>
  <test-case id="Whitespaces__91450" compiles="no"/>
  <test-case id="Whitespaces__91450" compiles="no"/>
  <test-case id="Whitespaces__91451" compiles="no"/>
  <test-case id="Whitespaces__91452" compiles="no"/>
  <test-case id="Whitespaces__91453" compiles="no"/>
  <test-case id="Whitespaces__91454" compiles="no"/>
  <test-case id="Whitespaces__91455" compiles="no"/>
  <test-case id="Whitespaces__91456" compiles="no"/>
  <test-case id="Whitespaces_WhitespaceStripTest1" compiles="no"/>
  <test-case id="Whitespaces_XSLT_StripSpace_WhitespaceWithText" compiles="no"/>

  <test-case id="XSLTFunctions__84048" skip="yes" reason="MS specific output"/>
  <test-case id="XSLTFunctions__84049" skip="yes" reason="MS specific output"/>
  <test-case id="XSLTFunctions__84050" skip="yes" reason="MS specific output"/>
  <test-case id="XSLTFunctions__84053" compare="text"/>
  <test-case id="XSLTFunctions__84054" skip="yes" reason="Needs format-number"/>
  <test-case id="XSLTFunctions__84056" compare="text"/>
  <test-case id="XSLTFunctions__84058" compare="text"/>
  <test-case id="XSLTFunctions__84170" compare="text"/>
  <test-case id="XSLTFunctions__84171" compare="text"/>
  <test-case id="XSLTFunctions__84172" compare="text"/>
  <test-case id="XSLTFunctions__84173" compare="text"/> 
  <test-case id="XSLTFunctions__84175" compare="text"/>
  <test-case id="XSLTFunctions__84415" compare="fragment"/>
  <test-case id="XSLTFunctions__84421" compare="fragment"/>
  <test-case id="XSLTFunctions__defaultPattern" compiles="no"/>
  <test-case id="XSLTFunctions__emptyParameters" compiles="no"/>
  <test-case id="XSLTFunctions__EuropeanPattern" compiles="no"/>
  <test-case id="XSLTFunctions__minimalValue" compiles="no"/>
  <test-case id="XSLTFunctions__minimumValue" compiles="no"/>
  <test-case id="XSLTFunctions__Non_DigitPattern" compiles="no"/>
  <test-case id="XSLTFunctions__Pattern-separator" compiles="no"/>
  <test-case id="XSLTFunctions__percentPattern" compiles="no"/>
  <test-case id="XSLTFunctions__sameDecimalFormats" compiles="no"/>
  <test-case id="XSLTFunctions__sameDecimalFormatsWithImport" compiles="no"/>
  <test-case id="XSLTFunctions__specialCharInPattern" compiles="no"/>
  <test-case id="XSLTFunctions__testOn-0.00" compiles="no"/>
  <test-case id="XSLTFunctions__testWithNumber" compiles="no"/>
  <test-case id="XSLTFunctions_DocumentFunctionWithAbsoluteArgument" skip="yes" reason="This test probably only worked on one machine somewhere in Microsoft.  Thanks chaps."/>
  <test-case id="XSLTFunctions_DocumentFunctionWithEntityRef" runs="no"/>
  <test-case id="XSLTFunctions_DocumentInUnion" skip="yes" reason="Order of nodes from different documents is not defined (or in mangle's case, necessarily consistent"/>
  <test-case id="XSLTFunctions_DocumentInUnionWithDuplicateNodes" runs="no"/>
  <test-case id="XSLTFunctions_KeyFuncTestDescendantsNodeset" compiles="no"/>
  <test-case id="XSLTFunctions_RoundTripNumber_UsingStringFn" skip="yes" reason="It's near enough, I reckon."/>
  <test-case id="XSLTFunctions_TestIdFuncInComplexStruct" compiles="no"/>
  <test-case id="XSLTFunctions_TestOfIdFunction" compiles="no"/>
  <test-case id="XSLTFunctions_Bug76054" compiles="no"/>
  <test-case id="XSLTFunctions_Bug76984" runs="no"/>

  <test-case id="attributes01" compare="text"/>
  
  <test-case id="stylesheet01" compare="text"/>
  <test-case id="stylesheet02" compare="text"/>
  <test-case id="stylesheet03" compare="text"/>

  <test-case id="text01" compare="text"/>
</test-suite>
